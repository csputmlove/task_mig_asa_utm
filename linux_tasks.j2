#!/bin/bash
set -e

echo "Generated on $(date) for host {{ inventory_hostname }}"
echo "Note: GRE key taken from description if set, otherwise a random value between 100 and 999 is used."

# Mapping of prefix lengths to netmask
{% set mask_map = {
  '0':'0.0.0.0','1':'128.0.0.0','2':'192.0.0.0','3':'224.0.0.0','4':'240.0.0.0',
  '5':'248.0.0.0','6':'252.0.0.0','7':'254.0.0.0','8':'255.0.0.0','9':'255.128.0.0',
  '10':'255.192.0.0','11':'255.224.0.0','12':'255.240.0.0','13':'255.248.0.0',
  '14':'255.252.0.0','15':'255.254.0.0','16':'255.255.0.0','17':'255.255.128.0',
  '18':'255.255.192.0','19':'255.255.224.0','20':'255.255.240.0','21':'255.255.248.0',
  '22':'255.255.252.0','23':'255.255.254.0','24':'255.255.255.0','25':'255.255.255.128',
  '26':'255.255.255.192','27':'255.255.255.224','28':'255.255.255.240','29':'255.255.255.248',
  '30':'255.255.255.252','31':'255.255.255.254','32':'255.255.255.255'
} %}

#### /etc/network/interfaces
cat << 'EOF' > /etc/network/interfaces
# interfaces(5) file used by ifup(8) and ifdown(8)
# Include files from /etc/network/interfaces.d:
source-directory /etc/network/interfaces.d

# loopback configuration
auto lo
iface lo inet loopback

###BEGIN MGRE BLOCK###
# mGRE interfaces (at top of interfaces file)
{% for intf in interfaces if 'mgre' in (intf.tags | default([])) %}
{% set parts = intf.ip_addresses[0].address.split('/') %}
{% if intf.description | trim %}
  {% set key = intf.description | int %}
{% else %}
  {% set key = range(100,1000) | random %}
{% endif %}
auto {{ intf.name }}
iface {{ intf.name }} inet static
address {{ parts[0] }}
netmask {{ mask_map[parts[1]] }}
pre-up ip tunnel add {{ intf.name }} mode gre key {{ key }} ttl 64 tos inherit
pre-up ethtool -K {{ intf.name }} tx off > /dev/null
pre-up ip link set {{ intf.name }} mtu {{ intf.custom_fields.gre_mtu | default(1400) }}
pre-up ip link set {{ intf.name }} multicast on
pre-up ip link set {{ intf.name }} type gre nopmtudisc
pre-up ip link set {{ intf.name }} type gre ignore-df
post-down ip link del {{ intf.name }}
{% endfor %}
###END MGRE BLOCK###

###netifcfg-begin###
# Physical interfaces (zero-based eth numbering)
{% for intf in interfaces if 'physical' in (intf.tags | default([])) %}
{% set idx0 = loop.index0 %}
auto eth{{ idx0 }}
allow-hotplug eth{{ idx0 }}
iface eth{{ idx0 }} inet static
mtu {{ intf.mtu | default(1500, true) }}
{% set parts = intf.ip_addresses[0].address.split('/') %}
address {{ parts[0] }}
netmask {{ mask_map[parts[1]] }}
{% endfor %}
###netifcfg-end###
EOF

#### /etc/ifaliases.cf
cat << 'EOF' > /etc/ifaliases.cf
interface (name="default" pattern="*")
{% for intf in interfaces %}
{% if 'physical' in (intf.tags | default([])) %}
  {% set idx0 = loop.index0 %}
  interface (name="{{ intf.name }}" pattern="eth{{ idx0 }}")
{% endif %}
{% endfor %}
EOF

# Apply interface alias mappings
integr_mgr calc -f /etc/ifaliases.cf
service vpngate restart

#### /etc/iptables/rules.v4
cat << 'EOF' > /etc/iptables/rules.v4
*filter
:INPUT DROP [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
{% for src in ssh_sources %}
-A INPUT -s {{ src }} -p tcp -m tcp --dport 22 -j ACCEPT
{% endfor %}
-A INPUT -p tcp -m tcp --dport 22 -j DROP
COMMIT
EOF

# Apply iptables rules
iptables-restore < /etc/iptables/rules.v4

# Bring up mGRE interfaces
{% for intf in interfaces if 'mgre' in (intf.tags | default([])) %}
ifup {{ intf.name }}
{% endfor %}

#### /etc/opennhrp/opennhrp.conf
cat << 'EOF' >> /etc/opennhrp/opennhrp.conf
### BEGIN ANSIBLE MANAGED BLOCK ###
{% for intf in interfaces if 'mgre' in (intf.tags|default([])) %}
interface {{ intf.name }}
  map *CHANGE IT* register
  multicast nhs
  holding-time 90
  cisco-authentication *ENTER PASSWORD*
  shortcut
  redirect
  non-caching
{% endfor %}
### END ANSIBLE MANAGED BLOCK ###
EOF
